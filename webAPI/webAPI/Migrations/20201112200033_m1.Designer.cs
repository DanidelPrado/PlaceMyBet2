// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webAPI.Models;

namespace webAPI.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20201112200033_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("webAPI.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cuota")
                        .HasColumnType("double");

                    b.Property<double>("Dinero")
                        .HasColumnType("double");

                    b.Property<string>("Fecha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Id_Mercado")
                        .HasColumnType("int");

                    b.Property<string>("Id_Usuario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("MercadoId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_Cuota")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Tipo_Mercado")
                        .HasColumnType("double");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("ApuestaId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");
                });

            modelBuilder.Entity("webAPI.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Local")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Visitante")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("webAPI.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cuota_Over")
                        .HasColumnType("double");

                    b.Property<double>("Cuota_Under")
                        .HasColumnType("double");

                    b.Property<double>("Dinero_Over")
                        .HasColumnType("double");

                    b.Property<double>("Dinero_Under")
                        .HasColumnType("double");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Evento")
                        .HasColumnType("int");

                    b.Property<double>("Tipo_Mercado")
                        .HasColumnType("double");

                    b.HasKey("MercadoId");

                    b.HasIndex("EventoId");

                    b.ToTable("Mercados");
                });

            modelBuilder.Entity("webAPI.Models.Usuario", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("webAPI.Models.Apuesta", b =>
                {
                    b.HasOne("webAPI.Models.Mercado", "Mercado")
                        .WithMany("ListaApuestas")
                        .HasForeignKey("MercadoId");

                    b.HasOne("webAPI.Models.Usuario", "Usuario")
                        .WithMany("Apuestas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("webAPI.Models.Mercado", b =>
                {
                    b.HasOne("webAPI.Models.Evento", "Evento")
                        .WithMany("ListaMercados")
                        .HasForeignKey("EventoId");
                });
#pragma warning restore 612, 618
        }
    }
}
